<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountName" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="ArticleName" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPasswordError" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="CreateButton" xml:space="preserve">
    <value>Create a new {0}</value>
  </data>
  <data name="DeleteAccountError" xml:space="preserve">
    <value>You don't have rights to delete your own account.</value>
  </data>
  <data name="DeleteAccountSuccesText" xml:space="preserve">
    <value>Account is successful deleted.</value>
  </data>
  <data name="DeleteAccountSuccesTitle" xml:space="preserve">
    <value>Delete account successful</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailError" xml:space="preserve">
    <value>E-mail is not a valid e-mail address.</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is a required field.</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="ForgotPasswordSend" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="ForgotPasswordText" xml:space="preserve">
    <value>Enter your email address and you will receive an email with instructions on how to reset your password.</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="ListName" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LoginError" xml:space="preserve">
    <value>Invalid login attempt.</value>
  </data>
  <data name="LoginInfo" xml:space="preserve">
    <value>Use a local account to log in.</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="NavigationName" xml:space="preserve">
    <value>Navigation</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>The {0} must be at least {2} characters long.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is a required field.</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset your password</value>
  </data>
  <data name="ResetPasswordText" xml:space="preserve">
    <value>Reset your password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchEngineOptimization" xml:space="preserve">
    <value>Search Engine Optimization</value>
  </data>
  <data name="VerifyCodeError" xml:space="preserve">
    <value>Invalid code.</value>
  </data>
  <data name="WebgridActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="WebgridChangedDate" xml:space="preserve">
    <value>Changed on</value>
  </data>
  <data name="WebgridCreatedBy" xml:space="preserve">
    <value>Created by</value>
  </data>
  <data name="WebgridCreationDate" xml:space="preserve">
    <value>Created on</value>
  </data>
  <data name="WebgridKeywords" xml:space="preserve">
    <value>Keywords</value>
  </data>
  <data name="WebgridKeywordsInfo" xml:space="preserve">
    <value>SEO tags. Seperated by comma.</value>
  </data>
  <data name="WebgridMetaData" xml:space="preserve">
    <value>Metadata</value>
  </data>
  <data name="WebgridMetaDescription" xml:space="preserve">
    <value>Meta Description</value>
  </data>
  <data name="WebgridMetaDescriptionInfo" xml:space="preserve">
    <value>SEO description. Only visible for search engines.</value>
  </data>
  <data name="WebgridMetaTitle" xml:space="preserve">
    <value>Meta Title</value>
  </data>
  <data name="WebgridMetaTitleInfo" xml:space="preserve">
    <value>SEO title. Only visible for search engines.</value>
  </data>
  <data name="WebgridName" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="WebgridPublishedDate" xml:space="preserve">
    <value>Published on</value>
  </data>
  <data name="WebgridTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ChangeButton" xml:space="preserve">
    <value>Change the {0}</value>
  </data>
  <data name="PublishInformation" xml:space="preserve">
    <value>Publish settings</value>
  </data>
  <data name="WebgridPublishedBy" xml:space="preserve">
    <value>Published by</value>
  </data>
  <data name="PublishOnLabel" xml:space="preserve">
    <value>Publish on</value>
  </data>
  <data name="ContentItemsTitle" xml:space="preserve">
    <value>Content items</value>
  </data>
  <data name="WebgridType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ArticleText" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="GeneralInformation" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="PageVisibility" xml:space="preserve">
    <value>Page visibility</value>
  </data>
  <data name="PageVisibilityBlocked" xml:space="preserve">
    <value>Blocked</value>
  </data>
  <data name="PageVisibilityLimited" xml:space="preserve">
    <value>Limited</value>
  </data>
  <data name="PageVisibilityPublic" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="ContentEmpty" xml:space="preserve">
    <value>There is no content in this article Drag a content item from the right box  into this field to add content.</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>This option is not yet available.</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="SelectTemplate" xml:space="preserve">
    <value>Select a template</value>
  </data>
  <data name="WebgridTemplate" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="TemplateCleanLayout" xml:space="preserve">
    <value>Clean layout</value>
  </data>
  <data name="TemplateHomepage" xml:space="preserve">
    <value>Homepage</value>
  </data>
  <data name="TemplateLandingpage" xml:space="preserve">
    <value>Landingpage</value>
  </data>
  <data name="FileUploadEmpty" xml:space="preserve">
    <value>Drag an image on this box to upload. Or &lt;u&gt;click here&lt;/u&gt; to browse an image.</value>
  </data>
</root>